# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This jobset is identical is used for deploy_test/multitier_test.go scale tests.
# after updating the image to what is used for SCALE_TEST_IMAGE.
#
# Note this creates & uses a service account in the default namespace for the
# scale test worker to do things like fiddling with configmaps.
#
# !PROJECT! and !TAG! must be set, for the workload image (assumed to be
# us-docker.pkg.dev/!PROJECT!/main/scale-test-worker).

apiVersion: jobset.x-k8s.io/v1alpha2
kind: JobSet
metadata:
  annotations:
    alpha.jobset.sigs.k8s.io/exclusive-topology: cloud.google.com/gke-nodepool
  name: job
spec:
  failurePolicy:
    maxRestarts: 20
    restartStrategy: Recreate
  replicatedJobs:
  - name: slice
    replicas: 3
    template:
      metadata: {}
      spec:
        backoffLimit: 0
        completionMode: Indexed
        completions: 2
        parallelism: 2
        template:
          metadata:
            labels:
              job: job
          spec:
            serviceAccountName: multitier-worker
            affinity:
              podAntiAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchLabels:
                      job: job
                  topologyKey: kubernetes.io/hostname
            containers:
            - name: worker
              image: us-docker.pkg.dev/!PROJECT!/main/scale-test-worker:!TAG!
              args:
              - --info-file=/local/jax-init-info.txt
              - --done-file=/control/$(POD)
              - --fail-file=/control/fail
              - --namespace=$(NAMESPACE)
              - --pod-name=$(POD)
              - --ip=$(IP)
              - --node=$(NODE)
              env:
              - name: NAMESPACE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
              - name: POD
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.name
              - name: IP
                valueFrom:
                  fieldRef:
                    fieldPath: status.podIP
              volumeMounts:
              - mountPath: /local
                name: checkpoint
              - mountPath: /control
                name: control
            nodeSelector:
              kind: checkpoint
            terminationGracePeriodSeconds: 1
            tolerations:
            - effect: NoSchedule
              key: checkpoint
              operator: Exists
            volumes:
            - csi:
                driver: multitier-checkpoint.csi.storage.gke.io
              name: checkpoint
            - emptyDir:
                medium: Memory
              name: control
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: multitier-worker
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: configmap-writer
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "update", "delete", "create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: configmap-writer
subjects:
- kind: ServiceAccount
  name: multitier-worker
  namespace: default
roleRef:
  kind: Role
  name: configmap-writer
  apiGroup: rbac.authorization.k8s.io


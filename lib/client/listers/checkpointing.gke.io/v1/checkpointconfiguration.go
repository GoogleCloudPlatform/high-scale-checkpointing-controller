/*
Copyright Google 2025

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	checkpointinggkeiov1 "gke-internal.googlesource.com/gke-storage/high-scale-checkpointing/apis/checkpointing.gke.io/v1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// CheckpointConfigurationLister helps list CheckpointConfigurations.
// All objects returned here must be treated as read-only.
type CheckpointConfigurationLister interface {
	// List lists all CheckpointConfigurations in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*checkpointinggkeiov1.CheckpointConfiguration, err error)
	// CheckpointConfigurations returns an object that can list and get CheckpointConfigurations.
	CheckpointConfigurations(namespace string) CheckpointConfigurationNamespaceLister
	CheckpointConfigurationListerExpansion
}

// checkpointConfigurationLister implements the CheckpointConfigurationLister interface.
type checkpointConfigurationLister struct {
	listers.ResourceIndexer[*checkpointinggkeiov1.CheckpointConfiguration]
}

// NewCheckpointConfigurationLister returns a new CheckpointConfigurationLister.
func NewCheckpointConfigurationLister(indexer cache.Indexer) CheckpointConfigurationLister {
	return &checkpointConfigurationLister{listers.New[*checkpointinggkeiov1.CheckpointConfiguration](indexer, checkpointinggkeiov1.Resource("checkpointconfiguration"))}
}

// CheckpointConfigurations returns an object that can list and get CheckpointConfigurations.
func (s *checkpointConfigurationLister) CheckpointConfigurations(namespace string) CheckpointConfigurationNamespaceLister {
	return checkpointConfigurationNamespaceLister{listers.NewNamespaced[*checkpointinggkeiov1.CheckpointConfiguration](s.ResourceIndexer, namespace)}
}

// CheckpointConfigurationNamespaceLister helps list and get CheckpointConfigurations.
// All objects returned here must be treated as read-only.
type CheckpointConfigurationNamespaceLister interface {
	// List lists all CheckpointConfigurations in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*checkpointinggkeiov1.CheckpointConfiguration, err error)
	// Get retrieves the CheckpointConfiguration from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*checkpointinggkeiov1.CheckpointConfiguration, error)
	CheckpointConfigurationNamespaceListerExpansion
}

// checkpointConfigurationNamespaceLister implements the CheckpointConfigurationNamespaceLister
// interface.
type checkpointConfigurationNamespaceLister struct {
	listers.ResourceIndexer[*checkpointinggkeiov1.CheckpointConfiguration]
}
